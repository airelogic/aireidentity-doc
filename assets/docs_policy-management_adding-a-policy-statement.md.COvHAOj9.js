import{_ as o,c as s,o as i,a4 as c,j as e,a as t}from"./chunks/framework.ttppV29E.js";const l="/assets/edit-policy.CA2Gkcjn.png",n="/assets/add-policy-statement-landing.C0o-Dnez.png",a="/assets/add-policy-statement.DYSsdtLv.png",d="/assets/save-edited-policy.Dmk5245N.png",$=JSON.parse('{"title":"Adding a Policy Statement","description":"","frontmatter":{},"headers":[],"relativePath":"docs/policy-management/adding-a-policy-statement.md","filePath":"docs/policy-management/adding-a-policy-statement.md"}'),r={name:"docs/policy-management/adding-a-policy-statement.md"},p=c('<h1 id="adding-a-policy-statement" tabindex="-1">Adding a Policy Statement <a class="header-anchor" href="#adding-a-policy-statement" aria-label="Permalink to &quot;Adding a Policy Statement&quot;">​</a></h1><p>Now you have created a policy you will need to add statements. To amend the policy, click on the action menu for the policy and select the <code>Edit Policy</code> option.</p><p><img src="'+l+'" alt="Edit policy"></p><p>You will then be presented with the statement screen where you can add new statements by clicking on the <code>Add Statement</code> button.</p><p><img src="'+n+'" alt="Policy page"></p><p>Once you have selected the statement button you will then be presented with a dialog modal where you will set the <code>Scope</code>, <code>Permission Set</code>,<code>Permissions</code>, <code>Effect</code> and <code>Resources</code>.</p><p><img src="'+a+'" alt="Add policy statement"></p><ul><li><strong>Permission Set</strong> - Here you select the permissions set for the statement, this will be based on the permissions available from the selected <code>Scope</code></li><li><strong>Permissions</strong> - Here you select the permissions for the statement, this will be based on the permissions available from the selected <code>Permissions Set</code> e.g. <code>view:SubjectCustomField</code>.</li><li><strong>Effect</strong> - This selects whether you wish to ‘Allow’ or ‘Block’ permissions within the statement. Note: Blocking a resource will deny access to the resource, even if the resource is allowed by another statement.</li><li><strong>Resources</strong> - Here you add the resources for this statement.</li></ul><p>For example, the <code>AireFrameApi</code> scope has a <code>Custom Fields</code> permission set which controls which fields are visible in <code>AireFrame</code>. These resources must match one of the following templates:</p>',9),m=e("ul",null,[e("li",{CustomFieldKey:""},"Subject/${InternalSubjectId}/FieldGroup/${FieldGroupKey}/Field/$"),e("li",{CustomFieldKey:""},"Subject/${InternalSubjectId}/Field/$"),e("li",{InternalSubjectId:""},"Subject/$"),e("li",{CustomFieldKey:""},"FieldGroup/${FieldGroupKey}/Field/$"),e("li",{FieldGroupKey:""},"FieldGroup/$"),e("li",{CustomFieldKey:""},"Field/$")],-1),h=e("p",null,[t("To allow access to a specific FieldGroup, select the "),e("code",null,"Allow"),t(" effect and specify the resource:")],-1),u=e("ul",null,[e("li",null,"FieldGroup/my-field-group")],-1),y=e("p",null,"Once you have finished updating the resource, click on the ‘Update’ button to save the changes.",-1),_=e("p",null,[e("img",{src:d,alt:"Save policy"})],-1),g=[p,m,h,u,y,_];function f(w,S,b,F,P,A){return i(),s("div",null,g)}const T=o(r,[["render",f]]);export{$ as __pageData,T as default};
