import{_ as a,c as e,o as t,a4 as o}from"./chunks/framework.ttppV29E.js";const u=JSON.parse('{"title":"Policy Management","description":"","frontmatter":{},"headers":[],"relativePath":"docs/policy-management/index.md","filePath":"docs/policy-management/index.md","lastUpdated":1750762124000}'),i={name:"docs/policy-management/index.md"},l=o('<h1 id="policy-management" tabindex="-1">Policy Management <a class="header-anchor" href="#policy-management" aria-label="Permalink to &quot;Policy Management&quot;">​</a></h1><h2 id="what-is-a-policy" tabindex="-1">What is a Policy? <a class="header-anchor" href="#what-is-a-policy" aria-label="Permalink to &quot;What is a Policy?&quot;">​</a></h2><p>A policy is a collection of statements that determine what level of information a user is allowed to view or manage. For example you may want to create a policy for an AireFrame user that controls what data (Subject Fields) are shown to a user e.g. a user may be able to see basic information about a subject (Name, Date-of-birth etc) but you may want to restrict their address.</p><p>For this you would use a policy to hide the address subject fields in a statement and apply this to a policy. The policy can then be applied against specific roles. This section will guide you through that process.</p><ul><li><a href="/docs/policy-management/adding-a-policy.html">Adding a policy</a></li><li><a href="/docs/policy-management/adding-a-policy-statement.html">Adding a policy statement</a></li><li><a href="/docs/policy-management/adding-a-policy-to-role.html">Adding a policy to a role</a></li><li><a href="/docs/policy-management/deleting-a-policy.html">Deleting a policy</a></li></ul>',5),n=[l];function c(s,r,d,m,p,h){return t(),e("div",null,n)}const _=a(i,[["render",c]]);export{u as __pageData,_ as default};
